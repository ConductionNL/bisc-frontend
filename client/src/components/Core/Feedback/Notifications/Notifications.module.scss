@import 'styles/variables/colors';
@import 'styles/variables/spacing';
@import 'styles/variables/animations';

@mixin modifyBorderAndIconColor($color) {
    .iconContainer {
        border-color: $color;

        &::before {
            background-color: $color;
        }

        .icon {
            background-color: $color;
        }
    }
}

.container {
    width: 300px;
    height: 85px;
    display: grid;
    grid-template-columns: 25% 75%;
    padding: spacing(2);

    border: 1px solid $color-grey-20;
    border-radius: 8px;

    .iconContainer,
    .textContainer {
        position: relative;
        width: 100%;
    }

    .iconContainer {
        display: flex;
        align-items: center;

        &::before {
            width: 4px;
            height: 70px;
            display: block;
            border-radius: 2.5px;
            content: '';
        }

        .icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 20px;
            height: 20px;
            margin: auto;
            color: $color-white;
            border-radius: 10px;

            svg {
                font-size: 10px;
            }
        }
    }

    .textContainer {
        margin-left: 0;
    }

    &.isSuccess {
        @include modifyBorderAndIconColor($color-ui-green);
    }
    &.isWarning {
        @include modifyBorderAndIconColor($color-ui-orange);
    }
    &.isError {
        @include modifyBorderAndIconColor($color-ui-red);
    }

    .text {
        margin: 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}

.animationContainer {
    position: fixed !important;
    z-index: 9999;
    bottom: 72px;
    right: 14px;

    will-change: transform;

    .animation {
        &-appear {
            opacity: 0;
            transform: translateX(100%);
        }

        &-appear-active {
            transition: opacity $animation-appear, transform $animation-appear;
            transform: translateX(0);
            opacity: 1;
        }

        &-enter {
            opacity: 0;
            transform: translateX(100%);
        }

        &-enter-active {
            transition: opacity $animation-appear, transform $animation-appear;
            transform: translateX(0);
            opacity: 1;
        }

        &-enter-done {
            opacity: 1;
            transform: translateX(0);
        }

        &-exit {
            opacity: 1;
        }

        &-exit-active {
            opacity: 0;
            transform: translateX(100%);
            transition: opacity $animation-appear, transform $animation-appear;
        }
    }
}

version: '3'
services:
    bisc-backend:
        image: 'lifely/bisc-backend:${GIT_COMMIT_HASH}'
        expose:
            - 5000
        environment:
            - API_KEY=
            - ENV= # staging, acceptance or production
            - APP_VERSION=${GIT_COMMIT_HASH}
            - APP_NAME=bisc
            - APP_PEPPER= # Create random string: openssl rand -hex 32
            - APP_SECRET= # Create random string: openssl rand -hex 32
            - APP_SERVER_URL=https://bisc-staging.lifely.nl
            - APP_CLIENT_URL=https://bisc-staging.lifely.nl
            - SENTRY_DNS=
            - MAIL=SMTP
            - MAIL_FROM_NAME=
            - MAIL_FROM_EMAIL=
            - MAIL_SMTP_HOST=
            - MAIL_SMTP_PORT=
            - MAIL_SMTP_AUTH_USERNAME=
            - MAIL_SMTP_AUTH_PASSWORD=
            - NODE_ENV=production
        restart: on-failure
    bisc-frontend:
        image: 'lifely/bisc-frontend:${GIT_COMMIT_HASH}'
        expose:
            - 80
        environment:
            # - LETSENCRYPT_TEST=true
            - VIRTUAL_HOST=bisc-staging.lifely.nl
            - VIRTUAL_PORT=80
            - LETSENCRYPT_HOST=bisc-staging.lifely.nl
            - LETSENCRYPT_EMAIL=ops@lifely.nl
            - NGINX_PROXY_PASS=http://bisc-backend:5000
            - NGINX_ENVJS_ENV=${DEPLOY_ENV}
            - NGINX_ENVJS_VERSION=${GIT_COMMIT_HASH}
            - NGINX_ENVJS_GRAPHQL_URI=${DEPLOY_GRAPHQL_URI}
        depends_on:
            - bisc-backend
    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: nginx-proxy
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - conf:/etc/nginx/conf.d
            - vhost:/etc/nginx/vhost.d
            - html:/usr/share/nginx/html
            - dhparam:/etc/nginx/dhparam
            - certs:/etc/nginx/certs:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        labels:
            com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: nginx-proxy-le
        environment:
            - NGINX_PROXY_CONTAINER=nginx-proxy
        volumes:
            - conf:/etc/nginx/conf.d
            - vhost:/etc/nginx/vhost.d
            - html:/usr/share/nginx/html
            - dhparam:/etc/nginx/dhparam
            - certs:/etc/nginx/certs:rw
            - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
    conf:
    vhost:
    html:
    dhparam:
    certs: